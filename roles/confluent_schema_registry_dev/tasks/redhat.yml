- rpm_key: state=present key=http://packages.confluent.io/rpm/1.0/archive.key
  when: ansible_os_family == 'RedHat'

- action: file path="/csi/src/" state=directory
    
- name: get confluent package
  get_url: url=http://packages.confluent.io/archive/1.0/confluent-1.0-2.10.4-rpm.tar.gz dest=/csi/src/confluent-1.0-2.10.4-rpm.tar.gz
  
- command: chdir=/csi/src tar xzf /csi/src/confluent-1.0-2.10.4-rpm.tar.gz creates=/csi/src/confluent-1.0/confluent-schema-registry-1.0-1.noarch.rpm
  
- yum: name=/csi/src/confluent-1.0/confluent-common-1.0-1.noarch.rpm state=present      
- yum: name=/csi/src/confluent-1.0/confluent-rest-utils-1.0-1.noarch.rpm state=present    
- yum: name=/csi/src/confluent-1.0/confluent-schema-registry-1.0-1.noarch.rpm state=present  

- name: Make sure the kafka group is present
  action: group name={{ kafka_group }} state=present

- name: Make sure the kafka user directory is present
  action: file path="/app/home/{{ kafka_user }}" state=directory

- name: Make sure the kafka user is present
  user: name={{ kafka_user }} group={{ kafka_group }} home="/app/home/{{ kafka_user }}" shell=/bin/bash state=present comment="Kafka user"

- file: path=/etc/kafka/schema-registry.properties state=absent

- file: path=/etc/confluent-schema-registry state=directory owner={{ kafka_user }} group={{ kafka_group }}
   
- name: Update the configuration
  template: src=schema-registry.properties dest=/etc/confluent-schema-registry/schema-registry.properties owner={{ kafka_user }} group={{ kafka_group }} mode=0644
  notify:
    - restart confluent-schema-registry

- name: systemd start script
  template: src=confluent-schema-registry.service dest=/etc/systemd/system/confluent-schema-registry.service owner=root group=root mode=644 
  notify: restart confluent-schema-registry
    
- name: "make sure the schema-registry is running and enabled"
  service: "name=confluent-schema-registry state=running enabled=yes"


  
     